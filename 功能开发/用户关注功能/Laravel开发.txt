BY L1-11.2

1、用户 Aufree 访问了 Summer 的个人页面进行浏览；
2、Aufree 对 Summer 发布的微博动态内容感兴趣，点击其个人页面的「关注按钮」进行关注；
3、关注之后 Aufree 将出现在 Summer 的粉丝列表，Summer 将出现在 Aufree 的关注人列表；
4、Aufree 在访问网站主页时，能够看到其他好友包括 Summer 和自己发布的动态；


粉丝数据表

在 Aufree 关注了 Summer 之后，Aufree 将成为 Summer 的粉丝，Summer 为 Aufree 的关注用户；在 Aufree 取消关注 Summer 之后，Summer 将从 Aufree 的关注人列表中被移除，Aufree 则从 Summer 的粉丝列表中被移除。由此可见，在关注用户功能的整个流程中，最重要的两个主体分别是被关注的用户（user_id）和粉丝（follower_id），我们可以通过被关注用户（user_id）来获取到他所有的粉丝，也能通过一个粉丝（follower_id）来获取到他关注的所有用户。现在，我们可以通过创建一个粉丝表来存放用户对应关注的所有粉丝。
表字段：id  user_id  follower_id  timestamps()


在用户关注功能中，一个用户（粉丝）能够关注多个人，而被关注者能够拥有多个粉丝，像这种关系我们称之为「多对多关系」。

在 Laravel 中我们使用 belongsToMany 来关联模型之间的多对多关系。


在我们为用户和粉丝模型进行了多对多关联之后，便可以使用 Eloquent 模型为多对多提供的一系列简便的方法。如使用 attach 方法或 sync 方法在中间表上创建一个多对多记录，使用 detach 方法在中间表上移除一个记录，创建和移除操作并不会影响到两个模型各自的数据，所有的数据变动都在 中间表 上进行。attach, sync, detach 这几个方法都允许传入 id 数组参数。