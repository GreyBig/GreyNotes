Git是什么？
Git是目前世界上最先进的分布式版本控制系统（没有之一）。

集中式vs分布式
集中式： 版本库是集中存放在中央服务器的
	 缺点：必须联网才能工作，对网速要求高
分布式： 没有“中央服务器”，每个人的电脑上都是一个完整的版本库
	 通常也有一台充当“中央服务器”的电脑,仅仅是用来方便“交换”大家的修改
	 安全性高，一台电脑坏了可以COPY其它电脑，集中式的中央服务器除了问题，所有人都没法干活。

创建版本库
版本库又名仓库，英文名repository，可以简单理解成一个目录

第一步 选择一个合适的地方，创建一个空目录：
$ mkdir learngit
$ cd learngit
$ pwd
/Users/michael/learngit

第二步，通过git init命令把这个目录变成Git可以管理的仓库：
$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/

如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。


把文件添加到版本库：

千万不要使用Windows自带的记事本编辑任何文本文件。
在learngit目录下（子目录也行），创建个txt文件并写入内容

第一步，用命令git add告诉Git，把文件添加到仓库：
$ git add readme.txt

第二步，用命令git commit告诉Git，把文件提交到仓库：
$ git commit -m "wrote a readme file"
[master (root-commit) eaadf4e] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

-m后面输入的是本次提交的说明
1 file changed：1个文件被改动（我们新添加的readme.txt文件）；2 insertions：插入了两行内容（readme.txt有两行内容）。
add可以使用多次再用commit提交

修改文件注意事项：
要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

查看提交日志：git log --pretty=oneline或者git log（查看详细内容） 
要重返未来，使用git reflog查看命令历史

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

工作区（Working Directory）就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：
暂存区(stage) 需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。

管理修改：因为Git跟踪并管理的是修改，而非文件。所以比其他版本控制系统设计得优秀

工作区->暂存库->本地版本库->远程版本库
丢弃工作区的修改：git checkout -- readme.txt
暂存区的修改撤销掉（unstage）：git reset HEAD readme.txt
本地版本回退：git reset --hard commit_id。

rm test.txt 删除test.txt这个文件
删除文件命令步骤：
$ rm test.txt
$ git status
$ git rm test.txt
$ git commit -m "remove test.txt"
