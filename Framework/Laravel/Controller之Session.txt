Session简介

由于HTTP协定是无状态(stateless)的，所有session提供一种保存用户数据的方法

Laravel支持多种session后端驱动，并提供清楚、统一的API。也内置支持如Memcached、Redis和数据库的后端驱动。
默认使用"file"的Session驱动

session的配置文件配置在config/session.php中



Laravel中使用session有三种方式：
	
	HTTP request类的session()方法

	session()辅助函数

	Session facade


第一种：

Route::group(['middleware' => ['web']], function(){
    Route::any('session1',['uses'=>'TestController@session1']);
    Route::any('session2',['uses'=>'TestController@session2']);
});

class TestController extends Controller
{
    public function session1(Request $request)
    {
        // 1. HTTP request session();
        $request->session()->put('key1','value1');
    }
    
    public function session2(Request $request)
    {
        echo $request->session()->get('key1');
    }
}


第三种  Session facade

	储存数据到Session
	session::put('key3','value3');
	获取
	session::get('key3');
	
	不存在则取默认值
	session::get('key3','default');

	session 传数组  
	session::put(['one'=>'1','two'=>'2']);
	获取
	session::get('one');

	取出session 的所有值  
	session::all()
	
	从session 中取出数据 取完之后删除:
	session::pull();

	删除session中指定的一个key值
	session::forget('key');

	删除所有session信息
	session::flush();

	判断某个session值是否存在
	if(session::has('key'){
	}

	只能第一次访问的时候能获取  暂存数据	
	session::flash('key');


